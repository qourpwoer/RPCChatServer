// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OfflineService.proto

#include "OfflineService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ik_OfflineService {
class WriteOfflineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteOfflineRequest>
      _instance;
} _WriteOfflineRequest_default_instance_;
class ReadOfflineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadOfflineRequest>
      _instance;
} _ReadOfflineRequest_default_instance_;
class ReadOfflineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadOfflineResponse>
      _instance;
} _ReadOfflineResponse_default_instance_;
}  // namespace ik_OfflineService
namespace protobuf_OfflineService_2eproto {
static void InitDefaultsWriteOfflineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_OfflineService::_WriteOfflineRequest_default_instance_;
    new (ptr) ::ik_OfflineService::WriteOfflineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_OfflineService::WriteOfflineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteOfflineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteOfflineRequest}, {}};

static void InitDefaultsReadOfflineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_OfflineService::_ReadOfflineRequest_default_instance_;
    new (ptr) ::ik_OfflineService::ReadOfflineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_OfflineService::ReadOfflineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadOfflineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadOfflineRequest}, {}};

static void InitDefaultsReadOfflineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_OfflineService::_ReadOfflineResponse_default_instance_;
    new (ptr) ::ik_OfflineService::ReadOfflineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_OfflineService::ReadOfflineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadOfflineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadOfflineResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WriteOfflineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadOfflineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadOfflineResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::WriteOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::WriteOfflineRequest, friendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::WriteOfflineRequest, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::ReadOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::ReadOfflineRequest, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::ReadOfflineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_OfflineService::ReadOfflineResponse, chat_msgs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ik_OfflineService::WriteOfflineRequest)},
  { 7, -1, sizeof(::ik_OfflineService::ReadOfflineRequest)},
  { 13, -1, sizeof(::ik_OfflineService::ReadOfflineResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_OfflineService::_WriteOfflineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_OfflineService::_ReadOfflineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_OfflineService::_ReadOfflineResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "OfflineService.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024OfflineService.proto\022\021ik_OfflineServic"
      "e\032\033google/protobuf/empty.proto\"4\n\023WriteO"
      "fflineRequest\022\020\n\010friendid\030\001 \001(\005\022\013\n\003msg\030\002"
      " \001(\014\"$\n\022ReadOfflineRequest\022\016\n\006userid\030\001 \001"
      "(\005\"(\n\023ReadOfflineResponse\022\021\n\tchat_msgs\030\001"
      " \003(\0142\301\001\n\021OfflineServiceRpc\022N\n\014WriteOffli"
      "ne\022&.ik_OfflineService.WriteOfflineReque"
      "st\032\026.google.protobuf.Empty\022\\\n\013ReadOfflin"
      "e\022%.ik_OfflineService.ReadOfflineRequest"
      "\032&.ik_OfflineService.ReadOfflineResponse"
      "B\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 413);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OfflineService.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_OfflineService_2eproto
namespace ik_OfflineService {

// ===================================================================

void WriteOfflineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteOfflineRequest::kFriendidFieldNumber;
const int WriteOfflineRequest::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteOfflineRequest::WriteOfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OfflineService_2eproto::scc_info_WriteOfflineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.WriteOfflineRequest)
}
WriteOfflineRequest::WriteOfflineRequest(const WriteOfflineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  friendid_ = from.friendid_;
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.WriteOfflineRequest)
}

void WriteOfflineRequest::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendid_ = 0;
}

WriteOfflineRequest::~WriteOfflineRequest() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.WriteOfflineRequest)
  SharedDtor();
}

void WriteOfflineRequest::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteOfflineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteOfflineRequest::descriptor() {
  ::protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OfflineService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteOfflineRequest& WriteOfflineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OfflineService_2eproto::scc_info_WriteOfflineRequest.base);
  return *internal_default_instance();
}


void WriteOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.WriteOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendid_ = 0;
  _internal_metadata_.Clear();
}

bool WriteOfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.WriteOfflineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 friendid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.WriteOfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.WriteOfflineRequest)
  return false;
#undef DO_
}

void WriteOfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.WriteOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 friendid = 1;
  if (this->friendid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->friendid(), output);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_OfflineService.WriteOfflineRequest)
}

::google::protobuf::uint8* WriteOfflineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.WriteOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 friendid = 1;
  if (this->friendid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->friendid(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.WriteOfflineRequest)
  return target;
}

size_t WriteOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.WriteOfflineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // int32 friendid = 1;
  if (this->friendid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friendid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteOfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.WriteOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteOfflineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteOfflineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.WriteOfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.WriteOfflineRequest)
    MergeFrom(*source);
  }
}

void WriteOfflineRequest::MergeFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.WriteOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.friendid() != 0) {
    set_friendid(from.friendid());
  }
}

void WriteOfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteOfflineRequest::CopyFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteOfflineRequest::IsInitialized() const {
  return true;
}

void WriteOfflineRequest::Swap(WriteOfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteOfflineRequest::InternalSwap(WriteOfflineRequest* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(friendid_, other->friendid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteOfflineRequest::GetMetadata() const {
  protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OfflineService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadOfflineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOfflineRequest::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOfflineRequest::ReadOfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OfflineService_2eproto::scc_info_ReadOfflineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.ReadOfflineRequest)
}
ReadOfflineRequest::ReadOfflineRequest(const ReadOfflineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.ReadOfflineRequest)
}

void ReadOfflineRequest::SharedCtor() {
  userid_ = 0;
}

ReadOfflineRequest::~ReadOfflineRequest() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.ReadOfflineRequest)
  SharedDtor();
}

void ReadOfflineRequest::SharedDtor() {
}

void ReadOfflineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadOfflineRequest::descriptor() {
  ::protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OfflineService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadOfflineRequest& ReadOfflineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OfflineService_2eproto::scc_info_ReadOfflineRequest.base);
  return *internal_default_instance();
}


void ReadOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.ReadOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _internal_metadata_.Clear();
}

bool ReadOfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.ReadOfflineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.ReadOfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.ReadOfflineRequest)
  return false;
#undef DO_
}

void ReadOfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.ReadOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_OfflineService.ReadOfflineRequest)
}

::google::protobuf::uint8* ReadOfflineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.ReadOfflineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.ReadOfflineRequest)
  return target;
}

size_t ReadOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.ReadOfflineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadOfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.ReadOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOfflineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadOfflineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.ReadOfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.ReadOfflineRequest)
    MergeFrom(*source);
  }
}

void ReadOfflineRequest::MergeFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.ReadOfflineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void ReadOfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOfflineRequest::CopyFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineRequest::IsInitialized() const {
  return true;
}

void ReadOfflineRequest::Swap(ReadOfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOfflineRequest::InternalSwap(ReadOfflineRequest* other) {
  using std::swap;
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadOfflineRequest::GetMetadata() const {
  protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OfflineService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadOfflineResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOfflineResponse::kChatMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOfflineResponse::ReadOfflineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OfflineService_2eproto::scc_info_ReadOfflineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.ReadOfflineResponse)
}
ReadOfflineResponse::ReadOfflineResponse(const ReadOfflineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chat_msgs_(from.chat_msgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.ReadOfflineResponse)
}

void ReadOfflineResponse::SharedCtor() {
}

ReadOfflineResponse::~ReadOfflineResponse() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.ReadOfflineResponse)
  SharedDtor();
}

void ReadOfflineResponse::SharedDtor() {
}

void ReadOfflineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadOfflineResponse::descriptor() {
  ::protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OfflineService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadOfflineResponse& ReadOfflineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OfflineService_2eproto::scc_info_ReadOfflineResponse.base);
  return *internal_default_instance();
}


void ReadOfflineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.ReadOfflineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chat_msgs_.Clear();
  _internal_metadata_.Clear();
}

bool ReadOfflineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.ReadOfflineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes chat_msgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_chat_msgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.ReadOfflineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.ReadOfflineResponse)
  return false;
#undef DO_
}

void ReadOfflineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.ReadOfflineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes chat_msgs = 1;
  for (int i = 0, n = this->chat_msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->chat_msgs(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_OfflineService.ReadOfflineResponse)
}

::google::protobuf::uint8* ReadOfflineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.ReadOfflineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes chat_msgs = 1;
  for (int i = 0, n = this->chat_msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->chat_msgs(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.ReadOfflineResponse)
  return target;
}

size_t ReadOfflineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.ReadOfflineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes chat_msgs = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->chat_msgs_size());
  for (int i = 0, n = this->chat_msgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->chat_msgs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadOfflineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.ReadOfflineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOfflineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadOfflineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.ReadOfflineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.ReadOfflineResponse)
    MergeFrom(*source);
  }
}

void ReadOfflineResponse::MergeFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.ReadOfflineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chat_msgs_.MergeFrom(from.chat_msgs_);
}

void ReadOfflineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOfflineResponse::CopyFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineResponse::IsInitialized() const {
  return true;
}

void ReadOfflineResponse::Swap(ReadOfflineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOfflineResponse::InternalSwap(ReadOfflineResponse* other) {
  using std::swap;
  chat_msgs_.InternalSwap(CastToBase(&other->chat_msgs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadOfflineResponse::GetMetadata() const {
  protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OfflineService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

OfflineServiceRpc::~OfflineServiceRpc() {}

const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc::descriptor() {
  protobuf_OfflineService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OfflineService_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc::GetDescriptor() {
  return descriptor();
}

void OfflineServiceRpc::WriteOffline(::google::protobuf::RpcController* controller,
                         const ::ik_OfflineService::WriteOfflineRequest*,
                         ::google::protobuf::Empty*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method WriteOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::ReadOffline(::google::protobuf::RpcController* controller,
                         const ::ik_OfflineService::ReadOfflineRequest*,
                         ::ik_OfflineService::ReadOfflineResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ReadOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_OfflineService_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      WriteOffline(controller,
             ::google::protobuf::down_cast<const ::ik_OfflineService::WriteOfflineRequest*>(request),
             ::google::protobuf::down_cast< ::google::protobuf::Empty*>(response),
             done);
      break;
    case 1:
      ReadOffline(controller,
             ::google::protobuf::down_cast<const ::ik_OfflineService::ReadOfflineRequest*>(request),
             ::google::protobuf::down_cast< ::ik_OfflineService::ReadOfflineResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& OfflineServiceRpc::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ik_OfflineService::WriteOfflineRequest::default_instance();
    case 1:
      return ::ik_OfflineService::ReadOfflineRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& OfflineServiceRpc::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::google::protobuf::Empty::default_instance();
    case 1:
      return ::ik_OfflineService::ReadOfflineResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
OfflineServiceRpc_Stub::~OfflineServiceRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void OfflineServiceRpc_Stub::WriteOffline(::google::protobuf::RpcController* controller,
                              const ::ik_OfflineService::WriteOfflineRequest* request,
                              ::google::protobuf::Empty* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void OfflineServiceRpc_Stub::ReadOffline(::google::protobuf::RpcController* controller,
                              const ::ik_OfflineService::ReadOfflineRequest* request,
                              ::ik_OfflineService::ReadOfflineResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ik_OfflineService
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_OfflineService::WriteOfflineRequest* Arena::CreateMaybeMessage< ::ik_OfflineService::WriteOfflineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_OfflineService::WriteOfflineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_OfflineService::ReadOfflineRequest* Arena::CreateMaybeMessage< ::ik_OfflineService::ReadOfflineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_OfflineService::ReadOfflineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_OfflineService::ReadOfflineResponse* Arena::CreateMaybeMessage< ::ik_OfflineService::ReadOfflineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_OfflineService::ReadOfflineResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
