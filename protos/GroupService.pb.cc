// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GroupService.proto

#include "GroupService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GroupService_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GroupService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GroupInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GroupService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo;
}  // namespace protobuf_GroupService_2eproto
namespace ik_GroupService {
class AddGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddGroupRequest>
      _instance;
} _AddGroupRequest_default_instance_;
class AddGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddGroupResponse>
      _instance;
} _AddGroupResponse_default_instance_;
class CreateGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateGroupRequest>
      _instance;
} _CreateGroupRequest_default_instance_;
class CreateGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateGroupResponse>
      _instance;
} _CreateGroupResponse_default_instance_;
class QuitGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuitGroupRequest>
      _instance;
} _QuitGroupRequest_default_instance_;
class QuitGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuitGroupResponse>
      _instance;
} _QuitGroupResponse_default_instance_;
class GetGroupUsersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGroupUsersRequest>
      _instance;
} _GetGroupUsersRequest_default_instance_;
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class GetGroupUsersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGroupUsersResponse>
      _instance;
} _GetGroupUsersResponse_default_instance_;
class GetGroupsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGroupsRequest>
      _instance;
} _GetGroupsRequest_default_instance_;
class GroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupInfo>
      _instance;
} _GroupInfo_default_instance_;
class GetGroupsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGroupsResponse>
      _instance;
} _GetGroupsResponse_default_instance_;
}  // namespace ik_GroupService
namespace protobuf_GroupService_2eproto {
static void InitDefaultsAddGroupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_AddGroupRequest_default_instance_;
    new (ptr) ::ik_GroupService::AddGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::AddGroupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddGroupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddGroupRequest}, {}};

static void InitDefaultsAddGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_AddGroupResponse_default_instance_;
    new (ptr) ::ik_GroupService::AddGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::AddGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddGroupResponse}, {}};

static void InitDefaultsCreateGroupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_CreateGroupRequest_default_instance_;
    new (ptr) ::ik_GroupService::CreateGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::CreateGroupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateGroupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateGroupRequest}, {}};

static void InitDefaultsCreateGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_CreateGroupResponse_default_instance_;
    new (ptr) ::ik_GroupService::CreateGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::CreateGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateGroupResponse}, {}};

static void InitDefaultsQuitGroupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_QuitGroupRequest_default_instance_;
    new (ptr) ::ik_GroupService::QuitGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::QuitGroupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuitGroupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuitGroupRequest}, {}};

static void InitDefaultsQuitGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_QuitGroupResponse_default_instance_;
    new (ptr) ::ik_GroupService::QuitGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::QuitGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuitGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuitGroupResponse}, {}};

static void InitDefaultsGetGroupUsersRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_GetGroupUsersRequest_default_instance_;
    new (ptr) ::ik_GroupService::GetGroupUsersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::GetGroupUsersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetGroupUsersRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetGroupUsersRequest}, {}};

static void InitDefaultsUserInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_UserInfo_default_instance_;
    new (ptr) ::ik_GroupService::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::UserInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserInfo}, {}};

static void InitDefaultsGetGroupUsersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_GetGroupUsersResponse_default_instance_;
    new (ptr) ::ik_GroupService::GetGroupUsersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::GetGroupUsersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetGroupUsersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetGroupUsersResponse}, {
      &protobuf_GroupService_2eproto::scc_info_UserInfo.base,}};

static void InitDefaultsGetGroupsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_GetGroupsRequest_default_instance_;
    new (ptr) ::ik_GroupService::GetGroupsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::GetGroupsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetGroupsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetGroupsRequest}, {}};

static void InitDefaultsGroupInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_GroupInfo_default_instance_;
    new (ptr) ::ik_GroupService::GroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::GroupInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupInfo}, {}};

static void InitDefaultsGetGroupsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ik_GroupService::_GetGroupsResponse_default_instance_;
    new (ptr) ::ik_GroupService::GetGroupsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ik_GroupService::GetGroupsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetGroupsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetGroupsResponse}, {
      &protobuf_GroupService_2eproto::scc_info_GroupInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AddGroupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateGroupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuitGroupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuitGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetGroupUsersRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetGroupUsersResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetGroupsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetGroupsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::AddGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::AddGroupRequest, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::AddGroupRequest, groupid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::AddGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::AddGroupResponse, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::AddGroupResponse, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupRequest, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupRequest, groupname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupRequest, groupdesc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupResponse, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::CreateGroupResponse, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::QuitGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::QuitGroupRequest, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::QuitGroupRequest, groupid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::QuitGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::QuitGroupResponse, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::QuitGroupResponse, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupUsersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupUsersRequest, groupid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::UserInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::UserInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::UserInfo, grouprole_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupUsersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupUsersResponse, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupUsersResponse, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupsRequest, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GroupInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GroupInfo, groupname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GroupInfo, groupdesc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupsResponse, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ik_GroupService::GetGroupsResponse, groups_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ik_GroupService::AddGroupRequest)},
  { 7, -1, sizeof(::ik_GroupService::AddGroupResponse)},
  { 14, -1, sizeof(::ik_GroupService::CreateGroupRequest)},
  { 22, -1, sizeof(::ik_GroupService::CreateGroupResponse)},
  { 30, -1, sizeof(::ik_GroupService::QuitGroupRequest)},
  { 37, -1, sizeof(::ik_GroupService::QuitGroupResponse)},
  { 44, -1, sizeof(::ik_GroupService::GetGroupUsersRequest)},
  { 50, -1, sizeof(::ik_GroupService::UserInfo)},
  { 58, -1, sizeof(::ik_GroupService::GetGroupUsersResponse)},
  { 65, -1, sizeof(::ik_GroupService::GetGroupsRequest)},
  { 71, -1, sizeof(::ik_GroupService::GroupInfo)},
  { 79, -1, sizeof(::ik_GroupService::GetGroupsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_AddGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_AddGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_CreateGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_CreateGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_QuitGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_QuitGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_GetGroupUsersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_GetGroupUsersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_GetGroupsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_GroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ik_GroupService::_GetGroupsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GroupService.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022GroupService.proto\022\017ik_GroupService\"2\n"
      "\017AddGroupRequest\022\016\n\006userid\030\001 \001(\005\022\017\n\007grou"
      "pid\030\002 \001(\005\"7\n\020AddGroupResponse\022\022\n\nis_succ"
      "ess\030\001 \001(\010\022\017\n\007err_msg\030\002 \001(\014\"J\n\022CreateGrou"
      "pRequest\022\016\n\006userid\030\001 \001(\005\022\021\n\tgroupname\030\002 "
      "\001(\014\022\021\n\tgroupdesc\030\003 \001(\014\"F\n\023CreateGroupRes"
      "ponse\022\022\n\nis_success\030\001 \001(\010\022\n\n\002id\030\002 \001(\005\022\017\n"
      "\007err_msg\030\003 \001(\014\"3\n\020QuitGroupRequest\022\016\n\006us"
      "erid\030\001 \001(\005\022\017\n\007groupid\030\002 \001(\005\"8\n\021QuitGroup"
      "Response\022\022\n\nis_success\030\001 \001(\010\022\017\n\007err_msg\030"
      "\002 \001(\014\"\'\n\024GetGroupUsersRequest\022\017\n\007groupid"
      "\030\001 \001(\005\"7\n\010UserInfo\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002"
      " \001(\014\022\021\n\tgrouprole\030\003 \001(\014\"U\n\025GetGroupUsers"
      "Response\022\022\n\nis_success\030\001 \001(\010\022(\n\005users\030\002 "
      "\003(\0132\031.ik_GroupService.UserInfo\"\"\n\020GetGro"
      "upsRequest\022\016\n\006userid\030\001 \001(\005\"=\n\tGroupInfo\022"
      "\n\n\002id\030\001 \001(\005\022\021\n\tgroupname\030\002 \001(\014\022\021\n\tgroupd"
      "esc\030\003 \001(\014\"S\n\021GetGroupsResponse\022\022\n\nis_suc"
      "cess\030\001 \001(\010\022*\n\006groups\030\002 \003(\0132\032.ik_GroupSer"
      "vice.GroupInfo2\304\003\n\017GroupServiceRpc\022O\n\010Ad"
      "dGroup\022 .ik_GroupService.AddGroupRequest"
      "\032!.ik_GroupService.AddGroupResponse\022X\n\013C"
      "reateGroup\022#.ik_GroupService.CreateGroup"
      "Request\032$.ik_GroupService.CreateGroupRes"
      "ponse\022R\n\tQuitGroup\022!.ik_GroupService.Qui"
      "tGroupRequest\032\".ik_GroupService.QuitGrou"
      "pResponse\022^\n\rGetGroupUsers\022%.ik_GroupSer"
      "vice.GetGroupUsersRequest\032&.ik_GroupServ"
      "ice.GetGroupUsersResponse\022R\n\tGetGroups\022!"
      ".ik_GroupService.GetGroupsRequest\032\".ik_G"
      "roupService.GetGroupsResponseB\003\200\001\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1242);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GroupService.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GroupService_2eproto
namespace ik_GroupService {

// ===================================================================

void AddGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGroupRequest::kUseridFieldNumber;
const int AddGroupRequest::kGroupidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGroupRequest::AddGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_AddGroupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.AddGroupRequest)
}
AddGroupRequest::AddGroupRequest(const AddGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.AddGroupRequest)
}

void AddGroupRequest::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(groupid_));
}

AddGroupRequest::~AddGroupRequest() {
  // @@protoc_insertion_point(destructor:ik_GroupService.AddGroupRequest)
  SharedDtor();
}

void AddGroupRequest::SharedDtor() {
}

void AddGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddGroupRequest::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddGroupRequest& AddGroupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_AddGroupRequest.base);
  return *internal_default_instance();
}


void AddGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.AddGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(groupid_));
  _internal_metadata_.Clear();
}

bool AddGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.AddGroupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.AddGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.AddGroupRequest)
  return false;
#undef DO_
}

void AddGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.AddGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // int32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->groupid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.AddGroupRequest)
}

::google::protobuf::uint8* AddGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.AddGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // int32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->groupid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.AddGroupRequest)
  return target;
}

size_t AddGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.AddGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.AddGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.AddGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.AddGroupRequest)
    MergeFrom(*source);
  }
}

void AddGroupRequest::MergeFrom(const AddGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.AddGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void AddGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.AddGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupRequest::CopyFrom(const AddGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.AddGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupRequest::IsInitialized() const {
  return true;
}

void AddGroupRequest::Swap(AddGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGroupRequest::InternalSwap(AddGroupRequest* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddGroupRequest::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGroupResponse::kIsSuccessFieldNumber;
const int AddGroupResponse::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGroupResponse::AddGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_AddGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.AddGroupResponse)
}
AddGroupResponse::AddGroupResponse(const AddGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  is_success_ = from.is_success_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.AddGroupResponse)
}

void AddGroupResponse::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_success_ = false;
}

AddGroupResponse::~AddGroupResponse() {
  // @@protoc_insertion_point(destructor:ik_GroupService.AddGroupResponse)
  SharedDtor();
}

void AddGroupResponse::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddGroupResponse::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddGroupResponse& AddGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_AddGroupResponse.base);
  return *internal_default_instance();
}


void AddGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.AddGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_success_ = false;
  _internal_metadata_.Clear();
}

bool AddGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.AddGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.AddGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.AddGroupResponse)
  return false;
#undef DO_
}

void AddGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.AddGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.AddGroupResponse)
}

::google::protobuf::uint8* AddGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.AddGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.AddGroupResponse)
  return target;
}

size_t AddGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.AddGroupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.AddGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.AddGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.AddGroupResponse)
    MergeFrom(*source);
  }
}

void AddGroupResponse::MergeFrom(const AddGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.AddGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
}

void AddGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.AddGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupResponse::CopyFrom(const AddGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.AddGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupResponse::IsInitialized() const {
  return true;
}

void AddGroupResponse::Swap(AddGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGroupResponse::InternalSwap(AddGroupResponse* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_success_, other->is_success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddGroupResponse::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGroupRequest::kUseridFieldNumber;
const int CreateGroupRequest::kGroupnameFieldNumber;
const int CreateGroupRequest::kGroupdescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGroupRequest::CreateGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_CreateGroupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.CreateGroupRequest)
}
CreateGroupRequest::CreateGroupRequest(const CreateGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.groupname().size() > 0) {
    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  groupdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.groupdesc().size() > 0) {
    groupdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupdesc_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.CreateGroupRequest)
}

void CreateGroupRequest::SharedCtor() {
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

CreateGroupRequest::~CreateGroupRequest() {
  // @@protoc_insertion_point(destructor:ik_GroupService.CreateGroupRequest)
  SharedDtor();
}

void CreateGroupRequest::SharedDtor() {
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateGroupRequest::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateGroupRequest& CreateGroupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_CreateGroupRequest.base);
  return *internal_default_instance();
}


void CreateGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.CreateGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
  _internal_metadata_.Clear();
}

bool CreateGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.CreateGroupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes groupname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_groupname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes groupdesc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_groupdesc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.CreateGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.CreateGroupRequest)
  return false;
#undef DO_
}

void CreateGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.CreateGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->groupname(), output);
  }

  // bytes groupdesc = 3;
  if (this->groupdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->groupdesc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.CreateGroupRequest)
}

::google::protobuf::uint8* CreateGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.CreateGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->groupname(), target);
  }

  // bytes groupdesc = 3;
  if (this->groupdesc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->groupdesc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.CreateGroupRequest)
  return target;
}

size_t CreateGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.CreateGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->groupname());
  }

  // bytes groupdesc = 3;
  if (this->groupdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->groupdesc());
  }

  // int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.CreateGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.CreateGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.CreateGroupRequest)
    MergeFrom(*source);
  }
}

void CreateGroupRequest::MergeFrom(const CreateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.CreateGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  if (from.groupdesc().size() > 0) {

    groupdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupdesc_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CreateGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.CreateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRequest::CopyFrom(const CreateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.CreateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRequest::IsInitialized() const {
  return true;
}

void CreateGroupRequest::Swap(CreateGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGroupRequest::InternalSwap(CreateGroupRequest* other) {
  using std::swap;
  groupname_.Swap(&other->groupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  groupdesc_.Swap(&other->groupdesc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateGroupRequest::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGroupResponse::kIsSuccessFieldNumber;
const int CreateGroupResponse::kIdFieldNumber;
const int CreateGroupResponse::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGroupResponse::CreateGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_CreateGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.CreateGroupResponse)
}
CreateGroupResponse::CreateGroupResponse(const CreateGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  ::memcpy(&is_success_, &from.is_success_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&is_success_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.CreateGroupResponse)
}

void CreateGroupResponse::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&is_success_)) + sizeof(id_));
}

CreateGroupResponse::~CreateGroupResponse() {
  // @@protoc_insertion_point(destructor:ik_GroupService.CreateGroupResponse)
  SharedDtor();
}

void CreateGroupResponse::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateGroupResponse::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateGroupResponse& CreateGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_CreateGroupResponse.base);
  return *internal_default_instance();
}


void CreateGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.CreateGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&is_success_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool CreateGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.CreateGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err_msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.CreateGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.CreateGroupResponse)
  return false;
#undef DO_
}

void CreateGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.CreateGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // bytes err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->err_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.CreateGroupResponse)
}

::google::protobuf::uint8* CreateGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.CreateGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // bytes err_msg = 3;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->err_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.CreateGroupResponse)
  return target;
}

size_t CreateGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.CreateGroupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.CreateGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.CreateGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.CreateGroupResponse)
    MergeFrom(*source);
  }
}

void CreateGroupResponse::MergeFrom(const CreateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.CreateGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CreateGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.CreateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupResponse::CopyFrom(const CreateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.CreateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupResponse::IsInitialized() const {
  return true;
}

void CreateGroupResponse::Swap(CreateGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGroupResponse::InternalSwap(CreateGroupResponse* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_success_, other->is_success_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateGroupResponse::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuitGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuitGroupRequest::kUseridFieldNumber;
const int QuitGroupRequest::kGroupidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuitGroupRequest::QuitGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_QuitGroupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.QuitGroupRequest)
}
QuitGroupRequest::QuitGroupRequest(const QuitGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.QuitGroupRequest)
}

void QuitGroupRequest::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(groupid_));
}

QuitGroupRequest::~QuitGroupRequest() {
  // @@protoc_insertion_point(destructor:ik_GroupService.QuitGroupRequest)
  SharedDtor();
}

void QuitGroupRequest::SharedDtor() {
}

void QuitGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuitGroupRequest::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuitGroupRequest& QuitGroupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_QuitGroupRequest.base);
  return *internal_default_instance();
}


void QuitGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.QuitGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(groupid_));
  _internal_metadata_.Clear();
}

bool QuitGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.QuitGroupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.QuitGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.QuitGroupRequest)
  return false;
#undef DO_
}

void QuitGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.QuitGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // int32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->groupid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.QuitGroupRequest)
}

::google::protobuf::uint8* QuitGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.QuitGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // int32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->groupid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.QuitGroupRequest)
  return target;
}

size_t QuitGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.QuitGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // int32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuitGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.QuitGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QuitGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuitGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.QuitGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.QuitGroupRequest)
    MergeFrom(*source);
  }
}

void QuitGroupRequest::MergeFrom(const QuitGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.QuitGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void QuitGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.QuitGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuitGroupRequest::CopyFrom(const QuitGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.QuitGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuitGroupRequest::IsInitialized() const {
  return true;
}

void QuitGroupRequest::Swap(QuitGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuitGroupRequest::InternalSwap(QuitGroupRequest* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuitGroupRequest::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuitGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuitGroupResponse::kIsSuccessFieldNumber;
const int QuitGroupResponse::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuitGroupResponse::QuitGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_QuitGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.QuitGroupResponse)
}
QuitGroupResponse::QuitGroupResponse(const QuitGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  is_success_ = from.is_success_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.QuitGroupResponse)
}

void QuitGroupResponse::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_success_ = false;
}

QuitGroupResponse::~QuitGroupResponse() {
  // @@protoc_insertion_point(destructor:ik_GroupService.QuitGroupResponse)
  SharedDtor();
}

void QuitGroupResponse::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuitGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuitGroupResponse::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuitGroupResponse& QuitGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_QuitGroupResponse.base);
  return *internal_default_instance();
}


void QuitGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.QuitGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_success_ = false;
  _internal_metadata_.Clear();
}

bool QuitGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.QuitGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.QuitGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.QuitGroupResponse)
  return false;
#undef DO_
}

void QuitGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.QuitGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.QuitGroupResponse)
}

::google::protobuf::uint8* QuitGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.QuitGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.QuitGroupResponse)
  return target;
}

size_t QuitGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.QuitGroupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuitGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.QuitGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QuitGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuitGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.QuitGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.QuitGroupResponse)
    MergeFrom(*source);
  }
}

void QuitGroupResponse::MergeFrom(const QuitGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.QuitGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
}

void QuitGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.QuitGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuitGroupResponse::CopyFrom(const QuitGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.QuitGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuitGroupResponse::IsInitialized() const {
  return true;
}

void QuitGroupResponse::Swap(QuitGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuitGroupResponse::InternalSwap(QuitGroupResponse* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_success_, other->is_success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuitGroupResponse::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGroupUsersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupUsersRequest::kGroupidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupUsersRequest::GetGroupUsersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_GetGroupUsersRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.GetGroupUsersRequest)
}
GetGroupUsersRequest::GetGroupUsersRequest(const GetGroupUsersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupid_ = from.groupid_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.GetGroupUsersRequest)
}

void GetGroupUsersRequest::SharedCtor() {
  groupid_ = 0;
}

GetGroupUsersRequest::~GetGroupUsersRequest() {
  // @@protoc_insertion_point(destructor:ik_GroupService.GetGroupUsersRequest)
  SharedDtor();
}

void GetGroupUsersRequest::SharedDtor() {
}

void GetGroupUsersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetGroupUsersRequest::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGroupUsersRequest& GetGroupUsersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_GetGroupUsersRequest.base);
  return *internal_default_instance();
}


void GetGroupUsersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.GetGroupUsersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_ = 0;
  _internal_metadata_.Clear();
}

bool GetGroupUsersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.GetGroupUsersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.GetGroupUsersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.GetGroupUsersRequest)
  return false;
#undef DO_
}

void GetGroupUsersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.GetGroupUsersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->groupid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.GetGroupUsersRequest)
}

::google::protobuf::uint8* GetGroupUsersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.GetGroupUsersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->groupid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.GetGroupUsersRequest)
  return target;
}

size_t GetGroupUsersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.GetGroupUsersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupUsersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.GetGroupUsersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupUsersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupUsersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.GetGroupUsersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.GetGroupUsersRequest)
    MergeFrom(*source);
  }
}

void GetGroupUsersRequest::MergeFrom(const GetGroupUsersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.GetGroupUsersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void GetGroupUsersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.GetGroupUsersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupUsersRequest::CopyFrom(const GetGroupUsersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.GetGroupUsersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupUsersRequest::IsInitialized() const {
  return true;
}

void GetGroupUsersRequest::Swap(GetGroupUsersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupUsersRequest::InternalSwap(GetGroupUsersRequest* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetGroupUsersRequest::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kIdFieldNumber;
const int UserInfo::kNameFieldNumber;
const int UserInfo::kGrouproleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_UserInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  grouprole_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grouprole().size() > 0) {
    grouprole_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grouprole_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.UserInfo)
}

void UserInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouprole_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:ik_GroupService.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouprole_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_UserInfo.base);
  return *internal_default_instance();
}


void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouprole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.UserInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes grouprole = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_grouprole()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // bytes grouprole = 3;
  if (this->grouprole().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->grouprole(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // bytes grouprole = 3;
  if (this->grouprole().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->grouprole(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes grouprole = 3;
  if (this->grouprole().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->grouprole());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.grouprole().size() > 0) {

    grouprole_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grouprole_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  grouprole_.Swap(&other->grouprole_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGroupUsersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupUsersResponse::kIsSuccessFieldNumber;
const int GetGroupUsersResponse::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupUsersResponse::GetGroupUsersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_GetGroupUsersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.GetGroupUsersResponse)
}
GetGroupUsersResponse::GetGroupUsersResponse(const GetGroupUsersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_success_ = from.is_success_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.GetGroupUsersResponse)
}

void GetGroupUsersResponse::SharedCtor() {
  is_success_ = false;
}

GetGroupUsersResponse::~GetGroupUsersResponse() {
  // @@protoc_insertion_point(destructor:ik_GroupService.GetGroupUsersResponse)
  SharedDtor();
}

void GetGroupUsersResponse::SharedDtor() {
}

void GetGroupUsersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetGroupUsersResponse::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGroupUsersResponse& GetGroupUsersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_GetGroupUsersResponse.base);
  return *internal_default_instance();
}


void GetGroupUsersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.GetGroupUsersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  is_success_ = false;
  _internal_metadata_.Clear();
}

bool GetGroupUsersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.GetGroupUsersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ik_GroupService.UserInfo users = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.GetGroupUsersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.GetGroupUsersResponse)
  return false;
#undef DO_
}

void GetGroupUsersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.GetGroupUsersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  // repeated .ik_GroupService.UserInfo users = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->users(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.GetGroupUsersResponse)
}

::google::protobuf::uint8* GetGroupUsersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.GetGroupUsersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  // repeated .ik_GroupService.UserInfo users = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->users(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.GetGroupUsersResponse)
  return target;
}

size_t GetGroupUsersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.GetGroupUsersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ik_GroupService.UserInfo users = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupUsersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.GetGroupUsersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupUsersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupUsersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.GetGroupUsersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.GetGroupUsersResponse)
    MergeFrom(*source);
  }
}

void GetGroupUsersResponse::MergeFrom(const GetGroupUsersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.GetGroupUsersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
}

void GetGroupUsersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.GetGroupUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupUsersResponse::CopyFrom(const GetGroupUsersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.GetGroupUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupUsersResponse::IsInitialized() const {
  return true;
}

void GetGroupUsersResponse::Swap(GetGroupUsersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupUsersResponse::InternalSwap(GetGroupUsersResponse* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  swap(is_success_, other->is_success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetGroupUsersResponse::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGroupsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupsRequest::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupsRequest::GetGroupsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_GetGroupsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.GetGroupsRequest)
}
GetGroupsRequest::GetGroupsRequest(const GetGroupsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.GetGroupsRequest)
}

void GetGroupsRequest::SharedCtor() {
  userid_ = 0;
}

GetGroupsRequest::~GetGroupsRequest() {
  // @@protoc_insertion_point(destructor:ik_GroupService.GetGroupsRequest)
  SharedDtor();
}

void GetGroupsRequest::SharedDtor() {
}

void GetGroupsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetGroupsRequest::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGroupsRequest& GetGroupsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_GetGroupsRequest.base);
  return *internal_default_instance();
}


void GetGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.GetGroupsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _internal_metadata_.Clear();
}

bool GetGroupsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.GetGroupsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.GetGroupsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.GetGroupsRequest)
  return false;
#undef DO_
}

void GetGroupsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.GetGroupsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.GetGroupsRequest)
}

::google::protobuf::uint8* GetGroupsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.GetGroupsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.GetGroupsRequest)
  return target;
}

size_t GetGroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.GetGroupsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.GetGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.GetGroupsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.GetGroupsRequest)
    MergeFrom(*source);
  }
}

void GetGroupsRequest::MergeFrom(const GetGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.GetGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void GetGroupsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.GetGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRequest::CopyFrom(const GetGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.GetGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRequest::IsInitialized() const {
  return true;
}

void GetGroupsRequest::Swap(GetGroupsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupsRequest::InternalSwap(GetGroupsRequest* other) {
  using std::swap;
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetGroupsRequest::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInfo::kIdFieldNumber;
const int GroupInfo::kGroupnameFieldNumber;
const int GroupInfo::kGroupdescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInfo::GroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_GroupInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.groupname().size() > 0) {
    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  groupdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.groupdesc().size() > 0) {
    groupdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupdesc_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.GroupInfo)
}

void GroupInfo::SharedCtor() {
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:ik_GroupService.GroupInfo)
  SharedDtor();
}

void GroupInfo::SharedDtor() {
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GroupInfo::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupInfo& GroupInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_GroupInfo.base);
  return *internal_default_instance();
}


void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.GroupInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes groupname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_groupname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes groupdesc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_groupdesc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.GroupInfo)
  return false;
#undef DO_
}

void GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->groupname(), output);
  }

  // bytes groupdesc = 3;
  if (this->groupdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->groupdesc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.GroupInfo)
}

::google::protobuf::uint8* GroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->groupname(), target);
  }

  // bytes groupdesc = 3;
  if (this->groupdesc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->groupdesc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.GroupInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->groupname());
  }

  // bytes groupdesc = 3;
  if (this->groupdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->groupdesc());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.GroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.GroupInfo)
    MergeFrom(*source);
  }
}

void GroupInfo::MergeFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  if (from.groupdesc().size() > 0) {

    groupdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupdesc_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void GroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::Swap(GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInfo::InternalSwap(GroupInfo* other) {
  using std::swap;
  groupname_.Swap(&other->groupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  groupdesc_.Swap(&other->groupdesc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GroupInfo::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGroupsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupsResponse::kIsSuccessFieldNumber;
const int GetGroupsResponse::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupsResponse::GetGroupsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GroupService_2eproto::scc_info_GetGroupsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_GroupService.GetGroupsResponse)
}
GetGroupsResponse::GetGroupsResponse(const GetGroupsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_success_ = from.is_success_;
  // @@protoc_insertion_point(copy_constructor:ik_GroupService.GetGroupsResponse)
}

void GetGroupsResponse::SharedCtor() {
  is_success_ = false;
}

GetGroupsResponse::~GetGroupsResponse() {
  // @@protoc_insertion_point(destructor:ik_GroupService.GetGroupsResponse)
  SharedDtor();
}

void GetGroupsResponse::SharedDtor() {
}

void GetGroupsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetGroupsResponse::descriptor() {
  ::protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGroupsResponse& GetGroupsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GroupService_2eproto::scc_info_GetGroupsResponse.base);
  return *internal_default_instance();
}


void GetGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_GroupService.GetGroupsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  is_success_ = false;
  _internal_metadata_.Clear();
}

bool GetGroupsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_GroupService.GetGroupsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ik_GroupService.GroupInfo groups = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_GroupService.GetGroupsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_GroupService.GetGroupsResponse)
  return false;
#undef DO_
}

void GetGroupsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_GroupService.GetGroupsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  // repeated .ik_GroupService.GroupInfo groups = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->groups(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ik_GroupService.GetGroupsResponse)
}

::google::protobuf::uint8* GetGroupsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ik_GroupService.GetGroupsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  // repeated .ik_GroupService.GroupInfo groups = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->groups(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ik_GroupService.GetGroupsResponse)
  return target;
}

size_t GetGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ik_GroupService.GetGroupsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ik_GroupService.GroupInfo groups = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->groups(static_cast<int>(i)));
    }
  }

  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_GroupService.GetGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_GroupService.GetGroupsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_GroupService.GetGroupsResponse)
    MergeFrom(*source);
  }
}

void GetGroupsResponse::MergeFrom(const GetGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_GroupService.GetGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
}

void GetGroupsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_GroupService.GetGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsResponse::CopyFrom(const GetGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_GroupService.GetGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsResponse::IsInitialized() const {
  return true;
}

void GetGroupsResponse::Swap(GetGroupsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupsResponse::InternalSwap(GetGroupsResponse* other) {
  using std::swap;
  CastToBase(&groups_)->InternalSwap(CastToBase(&other->groups_));
  swap(is_success_, other->is_success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetGroupsResponse::GetMetadata() const {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GroupService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

GroupServiceRpc::~GroupServiceRpc() {}

const ::google::protobuf::ServiceDescriptor* GroupServiceRpc::descriptor() {
  protobuf_GroupService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GroupService_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* GroupServiceRpc::GetDescriptor() {
  return descriptor();
}

void GroupServiceRpc::AddGroup(::google::protobuf::RpcController* controller,
                         const ::ik_GroupService::AddGroupRequest*,
                         ::ik_GroupService::AddGroupResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddGroup() not implemented.");
  done->Run();
}

void GroupServiceRpc::CreateGroup(::google::protobuf::RpcController* controller,
                         const ::ik_GroupService::CreateGroupRequest*,
                         ::ik_GroupService::CreateGroupResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateGroup() not implemented.");
  done->Run();
}

void GroupServiceRpc::QuitGroup(::google::protobuf::RpcController* controller,
                         const ::ik_GroupService::QuitGroupRequest*,
                         ::ik_GroupService::QuitGroupResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QuitGroup() not implemented.");
  done->Run();
}

void GroupServiceRpc::GetGroupUsers(::google::protobuf::RpcController* controller,
                         const ::ik_GroupService::GetGroupUsersRequest*,
                         ::ik_GroupService::GetGroupUsersResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetGroupUsers() not implemented.");
  done->Run();
}

void GroupServiceRpc::GetGroups(::google::protobuf::RpcController* controller,
                         const ::ik_GroupService::GetGroupsRequest*,
                         ::ik_GroupService::GetGroupsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetGroups() not implemented.");
  done->Run();
}

void GroupServiceRpc::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_GroupService_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      AddGroup(controller,
             ::google::protobuf::down_cast<const ::ik_GroupService::AddGroupRequest*>(request),
             ::google::protobuf::down_cast< ::ik_GroupService::AddGroupResponse*>(response),
             done);
      break;
    case 1:
      CreateGroup(controller,
             ::google::protobuf::down_cast<const ::ik_GroupService::CreateGroupRequest*>(request),
             ::google::protobuf::down_cast< ::ik_GroupService::CreateGroupResponse*>(response),
             done);
      break;
    case 2:
      QuitGroup(controller,
             ::google::protobuf::down_cast<const ::ik_GroupService::QuitGroupRequest*>(request),
             ::google::protobuf::down_cast< ::ik_GroupService::QuitGroupResponse*>(response),
             done);
      break;
    case 3:
      GetGroupUsers(controller,
             ::google::protobuf::down_cast<const ::ik_GroupService::GetGroupUsersRequest*>(request),
             ::google::protobuf::down_cast< ::ik_GroupService::GetGroupUsersResponse*>(response),
             done);
      break;
    case 4:
      GetGroups(controller,
             ::google::protobuf::down_cast<const ::ik_GroupService::GetGroupsRequest*>(request),
             ::google::protobuf::down_cast< ::ik_GroupService::GetGroupsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& GroupServiceRpc::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ik_GroupService::AddGroupRequest::default_instance();
    case 1:
      return ::ik_GroupService::CreateGroupRequest::default_instance();
    case 2:
      return ::ik_GroupService::QuitGroupRequest::default_instance();
    case 3:
      return ::ik_GroupService::GetGroupUsersRequest::default_instance();
    case 4:
      return ::ik_GroupService::GetGroupsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& GroupServiceRpc::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ik_GroupService::AddGroupResponse::default_instance();
    case 1:
      return ::ik_GroupService::CreateGroupResponse::default_instance();
    case 2:
      return ::ik_GroupService::QuitGroupResponse::default_instance();
    case 3:
      return ::ik_GroupService::GetGroupUsersResponse::default_instance();
    case 4:
      return ::ik_GroupService::GetGroupsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

GroupServiceRpc_Stub::GroupServiceRpc_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
GroupServiceRpc_Stub::GroupServiceRpc_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
GroupServiceRpc_Stub::~GroupServiceRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void GroupServiceRpc_Stub::AddGroup(::google::protobuf::RpcController* controller,
                              const ::ik_GroupService::AddGroupRequest* request,
                              ::ik_GroupService::AddGroupResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void GroupServiceRpc_Stub::CreateGroup(::google::protobuf::RpcController* controller,
                              const ::ik_GroupService::CreateGroupRequest* request,
                              ::ik_GroupService::CreateGroupResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void GroupServiceRpc_Stub::QuitGroup(::google::protobuf::RpcController* controller,
                              const ::ik_GroupService::QuitGroupRequest* request,
                              ::ik_GroupService::QuitGroupResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void GroupServiceRpc_Stub::GetGroupUsers(::google::protobuf::RpcController* controller,
                              const ::ik_GroupService::GetGroupUsersRequest* request,
                              ::ik_GroupService::GetGroupUsersResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void GroupServiceRpc_Stub::GetGroups(::google::protobuf::RpcController* controller,
                              const ::ik_GroupService::GetGroupsRequest* request,
                              ::ik_GroupService::GetGroupsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ik_GroupService
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::AddGroupRequest* Arena::CreateMaybeMessage< ::ik_GroupService::AddGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::AddGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::AddGroupResponse* Arena::CreateMaybeMessage< ::ik_GroupService::AddGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::AddGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::CreateGroupRequest* Arena::CreateMaybeMessage< ::ik_GroupService::CreateGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::CreateGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::CreateGroupResponse* Arena::CreateMaybeMessage< ::ik_GroupService::CreateGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::CreateGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::QuitGroupRequest* Arena::CreateMaybeMessage< ::ik_GroupService::QuitGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::QuitGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::QuitGroupResponse* Arena::CreateMaybeMessage< ::ik_GroupService::QuitGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::QuitGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::GetGroupUsersRequest* Arena::CreateMaybeMessage< ::ik_GroupService::GetGroupUsersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::GetGroupUsersRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::UserInfo* Arena::CreateMaybeMessage< ::ik_GroupService::UserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::UserInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::GetGroupUsersResponse* Arena::CreateMaybeMessage< ::ik_GroupService::GetGroupUsersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::GetGroupUsersResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::GetGroupsRequest* Arena::CreateMaybeMessage< ::ik_GroupService::GetGroupsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::GetGroupsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::GroupInfo* Arena::CreateMaybeMessage< ::ik_GroupService::GroupInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::GroupInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ik_GroupService::GetGroupsResponse* Arena::CreateMaybeMessage< ::ik_GroupService::GetGroupsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ik_GroupService::GetGroupsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
